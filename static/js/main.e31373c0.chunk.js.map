{"version":3,"sources":["component/Square.js","component/Board.js","component/History.jsx","component/StatusMessage.jsx","App.js","helper.jsx","index.js"],"names":["Square","value","onClick","isWinningSquares","className","style","fontWeight","type","Board","board","handleSquareClick","winningSquares","renderSquare","position","includes","History","history","moveTo","currentMove","map","_","move","StatusMessage","winner","current","noMovesLeft","every","el","isXNext","newGame","Array","fill","App","useState","setHistory","setCurrentMove","squares","lines","i","length","a","b","c","calculateWinner","prev","last","newBoard","square","pos","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e31373c0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = ({value,onClick,isWinningSquares}) => {\r\n    return <button className ={`square ${isWinningSquares ? 'winning' : ''}${value === 'X'?'text-green':'text-orange'}`} style = {{fontWeight:isWinningSquares ?'bold':'normal'}} type ='button'  onClick = {onClick}>{value}</button>\r\n}\r\n\r\nexport default Square\r\n","import React  from 'react';\r\nimport Square from './Square'\r\n\r\nconst Board = ({board,handleSquareClick,winningSquares}) => {\r\n\r\n\r\nconst renderSquare = (position)=>{\r\n\r\nconst isWinningSquares = winningSquares.includes(position)    \r\nreturn ( <Square value = {board[position]}\r\nonClick={()=>handleSquareClick(position)}\r\nisWinningSquares = {isWinningSquares}\r\n />\r\n);\r\n};\r\n\r\n// console.log(board)\r\n\r\nreturn (\r\n    <div className = 'board'>\r\n      <div className = 'board-row'>\r\n       {renderSquare(0)}\r\n       {renderSquare(1)}\r\n       {renderSquare(2)}\r\n      </div>\r\n      <div className = 'board-row'>\r\n      {renderSquare(3)}\r\n       {renderSquare(4)}\r\n       {renderSquare(5)}\r\n      </div>\r\n      <div className = 'board-row'>\r\n      {renderSquare(6)}\r\n       {renderSquare(7)}\r\n       {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react'\r\n\r\nconst History = ({history,moveTo,currentMove}) => {\r\n    return (\r\n        <div className=\"history-wrapper\">\r\n        <ul className = 'histoy'>\r\n            {\r\n                history.map((_ , move)=>{\r\n                    return(\r\n\r\n                        <li key = {move}><button type = 'button' className= {`btn-move ${move=== currentMove ? 'active' : ''}`} onClick = {()=>{moveTo(move)}}> {move === 0 ? `Go To Game Start`:`Go to move #${move}`}</button></li>\r\n                    )\r\n\r\n                })\r\n            }\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\n\r\nconst StatusMessage = ({winner,current}) => {\r\n    //  const message = winner ? `Winner is ${winner}`:`Next player is ${current.isXNext ? 'X': 'O'}`\r\n    const noMovesLeft = current.board.every(el=> el !== null)\r\n    return (\r\n         <div className = 'status-message'>\r\n             {winner &&  <>\r\n             Winner is <span className={winner ==='X'? 'text-green':'text-orange'}>{winner}</span>\r\n             </>}\r\n             {!winner && !noMovesLeft && <>\r\n                Next player is <span className = {current.isXNext ?'text-green':'text-orange'}>{current.isXNext ? 'X': 'O'} </span> \r\n             </>}\r\n             {!winner && noMovesLeft && <>\r\n             <span className = 'text-green'>X</span> and <span className ='text-orange'>O</span> Tied\r\n             </>}\r\n             </div>\r\n    )\r\n}\r\n\r\nexport default StatusMessage\r\n","import  React,{useState} from \"react\";\nimport Board from \"./component/Board\";\nimport History from './component/History'\nimport { calculateWinner } from \"./helper\";\nimport StatusMessage from \"./component/StatusMessage\";\nimport './styles/root.scss';\n\nconst newGame = [\n  {board:Array(9).fill(null),isXNext:true}\n];\n const App = () => {\n  const [history,setHistory] = useState(newGame)\n  const [currentMove,setCurrentMove] = useState(0);\n  const current = history[currentMove]\n  // console.log(history)\nconst {winner,winningSquares} = calculateWinner(current.board);\n\nconst handleSquareClick  = (position)=>{\n\n    if(current.board[position] || winner){\n        return;\n    }\nsetHistory((prev)=>{\n const last = prev[prev.length - 1];\n\nconst newBoard =   last.board.map((square,pos)=>{\n    if(pos===position){\n        return last.isXNext ? 'X': 'O';\n    }\n    return square;\n});\nreturn prev.concat({board:newBoard,isXNext:!last.isXNext})\n});\nsetCurrentMove(prev => prev + 1)\n}\nconst moveTo = (move)=>{\n  setCurrentMove(move);\n}\nconst onNewGame = ()=>{\n  setHistory(newGame)\n  setCurrentMove(0);\n}\nreturn(\n  <div className = 'app'>\n    <h1>TIC <span className =  'text-green' >TAC</span> TOE</h1>\n     <StatusMessage winner = {winner} current ={current} />\n    <Board board ={current.board} handleSquareClick ={handleSquareClick} winningSquares = {winningSquares}/>\n    <button type = 'button'className={`btn-reset ${winner ? 'active':''}`} onClick = {onNewGame}>start new game</button>\n    <h2 style ={{fontWeight:\"normal\"}}>Current game history</h2>\n    <History history = {history} moveTo = {moveTo} currentMove = {currentMove}/>\n    <div className='bg-balls' />\n  </div>\n)\n };\nexport default App;\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        // return squares[a];\r\n        return {\r\n          winner: squares[a],\r\n          winningSquares : [a,b,c]\r\n        }\r\n      }\r\n    }\r\n    return {\r\n     winner: null,\r\n     winningSquares :[]\r\n\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}